/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

/* Font face */
@import "../src/theme/fonts.scss";

html {
  font-size: var(--base-font-size);
}

input {
  &:-webkit-autofill {
    transition: background-color 5000s;
  }

  &:-webkit-autofill::first-line {
    font-family: "Source Sans Pro";
    font-size: var(--input-autofill-font-size);
    font-weight: var(--input-autofill-font-weight);
  }
}

ion-card {
  background: rgba(var(--ion-card-background-rgb), 0.4);
  backdrop-filter: blur(var(--background-blur-size));
  border-radius: var(--card-border-radius);
  box-shadow: -1px 1px 2px rgba(0,0,0,0.07), 
    -2px 2px 4px rgba(0,0,0,0.07), 
    -4px 4px 8px rgba(0,0,0,0.07), 
    -8px 8px 16px rgba(0,0,0,0.07);
  transition: all .2s ease-in-out;
}

ion-card ion-card-title, ion-list-header ion-label {
  color: rgba(var(--ion-color-dark-rgb), 0.6);
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

ion-list-header ion-label {
  font-size: var(--list-header-font-size);
}

ion-header {
  --min-height: var(--header-height);
  text-align: center;

  &::after {
    background-image: none !important;
  }

  ion-title {
    color: rgba(var(--ion-text-color-rgb), 0.7);
    font-size: var(--header-font-size);
  }

  ion-toolbar {
    --background: transparent;
    --min-height: var(--header-height);

    ion-chip {
      background: rgba(var(--ion-card-background-rgb), 0.2);
      box-shadow: -1px 1px 2px rgba(0,0,0,0.07), 
        -2px 2px 4px rgba(0,0,0,0.07), 
        -4px 4px 8px rgba(0,0,0,0.07), 
        -8px 8px 16px rgba(0,0,0,0.07);
      color: rgba(var(--ion-text-color-rgb), 0.7);
      user-select: none;
    }
  }
}

ion-fab-button {
  --box-shadow: -1px 1px 2px rgba(var(--ion-color-primary-rgb), 0.07), 
    -2px 2px 4px rgba(var(--ion-color-primary-rgb), 0.07), 
    -4px 4px 8px rgba(var(--ion-color-primary-rgb), 0.07), 
    -8px 8px 16px rgba(var(--ion-color-primary-rgb), 0.07);
}

ion-item.internal {
  --background: none;
  --border-color: transparent !important;
  --border-width: 0 !important;
  --highlight-height: 0;
  align-items: center;
  background: rgba(var(--ion-color-light-contrast-rgb), 0.05);
  border: 2px solid transparent;
  border-radius: var(--item-border-radius);
  display: flex;
  height: 100%;

  &::part(native) {
    height: 100%;
  }

  ion-input {
    color: rgba(var(--ion-color-light-contrast-rgb), 0.5) !important;
    height: var(--input-height);
  }

  ion-label {
    color: rgba(var(--ion-color-light-contrast-rgb), 0.2) !important;
  }

  ion-select {
    &::part(text), &::part(placeholder) {
      margin-right: var(--select-spacing);
    }

    &::part(text) {
      color: rgba(var(--ion-color-light-contrast-rgb), 0.5) !important;
    }
  }

  &:not(.item-has-focus).ion-touched.ion-invalid {
    border: 2px solid var(--ion-color-danger);
  }

  &.item-has-focus, &.ion-focused {
    border: 2px solid var(--ion-color-primary);

    ion-input {
      color: var(--ion-color-light-contrast) !important;
    }

    ion-label {
      color: var(--ion-color-primary) !important;
    }
  }
}

.alert-radio-group.sc-ion-alert-md, .alert-checkbox-group.sc-ion-alert-md {
  border: 0;

  .alert-radio-label.sc-ion-alert-md {
    color: rgba(var(--ion-color-light-contrast-rgb), 0.4) !important;
  }

  [aria-checked=true].sc-ion-alert-md .alert-radio-label.sc-ion-alert-md {
    color: var(--ion-color-primary) !important;
  }
}

ion-modal {
  --height: auto !important;

  .modal-wrapper {
    border-radius: var(--modal-border-radius) !important;
    margin: var(--modal-margin);
    max-width: var(--modal-width) !important;

    .ion-page {
      contain: content;
      max-height: var(--modal-page-height);
      padding: var(--modal-page-vertical-spacing) var(--modal-page-horizontal-spacing) !important;
      position: relative;

      .modal-content {
        overflow: auto;
      }
    }
  }
}

.toast-container {
  --max-width: var(--toast-width);
  --width: auto;
  text-align: center;
}

.popover-container .popover-content {
  --max-height: var(--popover-height);
  --max-width: var(--popover-width);
  background: var(--ion-card-background);
  border-radius: var(--popover-border-radius);
  transition: all .2s ease-in-out;
  height: var(--popover-max-height);
  width: var(--popover-max-width);
  padding: var(--popover-spacing);
}

// Cupertino Pane styles
.cupertino-pane-wrapper .pane {
  backdrop-filter: blur(var(--menu-background-blur-size));
  background: rgba(var(--ion-card-background-rgb), 0.4) !important;

  .move {
    background-color: rgba(var(--ion-text-color-rgb), 0.6) !important;
    border-radius: var(--menu-drag-border-radius) !important;
    height: var(--menu-drag-height) !important;
    width: var(--menu-drag-width) !important;
  }
}

// Dragulla styles
.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
}

.gu-hide {
  display: none !important;
}

.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}
